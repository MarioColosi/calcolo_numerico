	PROGRAM NORMA_MATRICI
	USE MSIMSL
	PARAMETER(N_MAX=100)
	REAL A(N_MAX,N_MAX)
	REAL NORMA1,NORMA2,NORMAINF,NORMA_1,NORMA_2,NORMA_INF
	REAL NORMA_F,NORMA_FROBENIUS			 

	WRITE(*,*)'Inserisci l''ordine della matrice A:'
	READ(*,*)N
	
	CALL INIT_MATRIX(A,N_MAX,N)
	NORMA1=NORMA_1(A,N_MAX,N)
	NORMA2=NORMA_2(A,N_MAX,N)
	NORMAINF=NORMA_INF(A,N_MAX,N)
	NORMA_F=NORMA_FROBENIUS(A,N_MAX,N)

	WRITE(*,*)'La norma 1 e'':',NORMA1
	WRITE(*,*)'La norma 2 e'':',NORMA2
	WRITE(*,*)'La norma inf e'':',NORMAINF
	WRITE(*,*)'La norma Frobenius e'':',NORMA_F
	END

	SUBROUTINE INIT_MATRIX(A,N_MAX,N)
	REAL A(N_MAX,N)
	WRITE(*,*)'Inserisci i valori della matrice:'
	DO I=1,N
		READ(*,*)(A(I,J),J=1,N)
	END DO
	END

	REAL FUNCTION NORMA_1(A,N_MAX,N)
	REAL A(N_MAX,N)
	REAL SOMMA

	NORMA_1=0
      DO J=1,N
		SOMMA=0
          DO I=1,N
			SOMMA=SOMMA+ABS(A(I,J))
		END DO
		IF (NORMA_1.LT.SOMMA) NORMA_1=SOMMA
	END DO 
	END 

	REAL FUNCTION NORMA_2(A,N_MAX,N)
	REAL A(N_MAX,N)
	REAL A2(N_MAX,N)
	COMPLEX EVAL(N)
	DO I=1,N
		DO J=1,N
			A2(I,J)=A(I,J)*A(J,I)
		END DO
	END DO
	CALL MUL_A_PER_TRASPOSTA(A,A,A2,N_MAX,N)
	CALL EVLRG(N,A2,N_MAX,EVAL)			   
	NORMA_2=SQRT(ABS(EVAL(1)))
	END

	SUBROUTINE MUL_A_PER_TRASPOSTA(A,B,C,N_MAX,N)
	REAL A(N_MAX,N),B(N_MAX,N),C(N_MAX,N)
	INTEGER I,J,K
	DO I=1,N
		DO J=1, N
			C(I,J) = 0
				DO K=1,N
					C(I,J) = C(I,J) + A(I,K)*B(J,K)
				END DO
		END DO
	END DO
	END

	REAL FUNCTION NORMA_INF(A,N_MAX,N)
	REAL A(N_MAX,N)
	REAL SOMMA
	NORMA_INF=0
	DO I=1,N
		SOMMA=0
		DO J=1,N
			SOMMA=SOMMA+ABS(A(I,J))
		END DO 
		IF(NORMA_INF.LE.SOMMA) NORMA_INF=SOMMA
	END DO 
	END 


	REAL FUNCTION NORMA_FROBENIUS(A,N_MAX,N)
	REAL A(N_MAX,N)
	NORMA_FROBENIUS=0
	DO I=1,N
		DO J=1,N
			NORMA_FROBENIUS=NORMA_FROBENIUS+(A(I,J)*A(I,J))
		END DO
	END DO
	NORMA_FROBENIUS=SQRT(NORMA_FROBENIUS)
	END 

	 
	
